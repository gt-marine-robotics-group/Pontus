<?xml version="1.0"?>
<robot name="pontus" xmlns:xacro="http://www.ros.org/wiki/xacro" >
  <xacro:include filename="$(find pontus_description)/models/pontus/components/thrusters.xacro"/>
  <xacro:include filename="$(find pontus_description)/models/pontus/components/sensors.xacro"/>
  <xacro:include filename="$(find pontus_description)/models/pontus/components/lights.xacro"/>


  <!--<xacro:property name="mesh_file" value="file://$(find pontus_description)/models/pontus/meshes/pontus_body_mesh.STL"/>-->


  <xacro:arg name="sim" default="false"/>
  <xacro:arg name="static" default="false"/>

  <xacro:property name="fluid_density" value="1025"/>

  <xacro:property name="namespace" value="pontus"/>
  <xacro:property name="mass" value="50"/>


  <xacro:property name="length" value="0.61"/>
  <xacro:property name="radius" value="0.1"/>
  <xacro:property name="volume" value="${pi*length*(radius)**2}"/>

  <!-- Create pontus -->
  <link name="base_link">
    <inertial>
      <!-- This is calculated for slightly positive buoyancy -->
      <mass value="${(volume * fluid_density) - 1.0}"/>

      <!-- TODO: insert actual calculations instead of precalculated value -->
      <inertia
        ixx="55" ixy="0" ixz="0"
        iyy="0.585" iyz="0" izz="55"
      />

    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 ${-90*pi/180} 0"/>
      <geometry>
        <cylinder length="${length}" radius="${radius}"/>
      </geometry>

      <material name="acrylic">
        <color rgba="0.9 0.9 0.9 0.4"/>
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 ${-90*pi/180} 0"/>
      <geometry>
        <cylinder length="${length}" radius="${radius}"/>
      </geometry>
    </collision>
  </link>

  <!-- Thrusters -->

  <!-- Back Left Vertical Thruster -->
  <xacro:T200_macro thruster_id="0">
    <origin xyz="-0.075 -${radius + 0.07} 0" rpy="0 0 0" />
  </xacro:T200_macro>

  <!-- Back Right Vertical Thruster -->
  <xacro:T200_macro thruster_id="1">
    <origin xyz="-0.075 ${radius + 0.07} 0" rpy="0 0 ${180*pi/180}" />
  </xacro:T200_macro>

  <!-- Front Left Vertical Thruster -->
  <xacro:T200_macro thruster_id="2">
    <origin xyz="0.075 -${radius + 0.07} 0" rpy="0 0 0" />
  </xacro:T200_macro>

  <!-- Front Right Vertical Thruster -->
  <xacro:T200_macro thruster_id="3">
    <origin xyz="0.075 ${radius + 0.07} 0" rpy="0 0 ${180*pi/180}" />
  </xacro:T200_macro>



  <!-- Back Left Horizontal Thruster -->
  <xacro:T200_macro thruster_id="4">
    <origin xyz="-0.25 ${radius + 0.15} 0" rpy="${180*pi/180}  -${90*pi/180} ${5/4 * pi}" />
  </xacro:T200_macro>

  <!-- Back Right Horizontal Thruster -->
  <xacro:T200_macro thruster_id="5">
    <origin xyz="-0.25 -${radius + 0.15} 0" rpy="0 ${90*pi/180} ${3/4 * pi}" />
  </xacro:T200_macro>

  <!-- Front Left Horizontal Thruster -->
  <xacro:T200_macro thruster_id="6">
    <origin xyz="0.25 ${radius + 0.15} 0" rpy="${180*pi/180}  -${90*pi/180} ${-1/4 * pi}" />
  </xacro:T200_macro>

  <!-- Front Right Horizontal Thruster -->
  <xacro:T200_macro thruster_id="7">
    <origin xyz="0.25 -${radius + 0.15} 0" rpy="0 ${90*pi/180} ${1/4 * pi}" />
  </xacro:T200_macro>

  <xacro:light_macro light_id="0">
    <origin xyz="0.1 0 0" rpy="0 0 0" />
  </xacro:light_macro>

  <!-- Sensors -->

  <!-- Forward Camera -->
  <xacro:camera_macro camera_id="2">
    <origin xyz="0.305 0 0" rpy="0 0 0" />
  </xacro:camera_macro>
    <xacro:camera_macro camera_id="3">
    <origin xyz="0.305 -0.075 0" rpy="0 0 0" />
  </xacro:camera_macro>


  <!-- Side Camera -->
  <xacro:camera_macro camera_id="4">
    <origin xyz="0 0.06 0.1" rpy="0 0 ${90*pi/180}" />
  </xacro:camera_macro>
  <xacro:camera_macro camera_id="5">
    <origin xyz="0 -0.06 0.1" rpy="0 0 -${90*pi/180}" />
  </xacro:camera_macro>

  <!-- Downward Camera -->
  <xacro:camera_macro camera_id="1">
    <origin xyz="0 0 -0.1" rpy="0 ${90*pi/180} 0" />
  </xacro:camera_macro>

  <!-- Forward Sonar -->
  <xacro:sonoptix_macro sonar_id="0">
    <origin xyz="0.28 0 -0.15" rpy="${pi} ${10*pi/180} 0" />
  </xacro:sonoptix_macro>

  <!-- 360 Top Sonar -->
  <xacro:ping360_macro sonar_id="1">
    <origin xyz="0 0 ${radius + 0.02}" rpy="0 0 0" />
  </xacro:ping360_macro>

  <!-- DVL -->
  <xacro:dvl_macro dvl_id="0">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:dvl_macro>

  <!-- IMU -->
  <xacro:imu_macro imu_id="0">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:imu_macro>

  <!-- Pressure -->
  <xacro:pressure_macro pressure_id="0">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:pressure_macro>


  <!-- Lock Pontus in place for sensor testing -->
  <gazebo>
    <static>$(arg static)</static>
  </gazebo>


  <!-- hydrodynamics and control plugins -->
  <gazebo>
    <!-- TODO: get actual numbers for this -->
    <plugin
      filename="gz-sim-hydrodynamics-system"
      name="gz::sim::systems::Hydrodynamics">
      <link_name> base_link </link_name>
      <!-- Incorrect Added Mass values causing crashes -->
      <!--<xDotU>-4.876161</xDotU>
        <yDotV>-126.324739</yDotV>
        <zDotW>-126.324739</zDotW>
        <kDotP>0</kDotP>
        <mDotQ>-33.46</mDotQ>
        <nDotR>-33.46</nDotR> -->


        <!-- Added Mass -->
        <xDotU>0</xDotU>
        <yDotV>0</yDotV>
        <zDotW>0</zDotW>
        <kDotP>0</kDotP>
        <mDotQ>0</mDotQ>
        <nDotR>0</nDotR>

        <!-- Linear Drag -->
        <xU>-10</xU>
        <yV>-10</yV>
        <zW>-10</zW>
        <kP>-10</kP>
        <mQ>-10</mQ>
        <nR>-10</nR>

        <!-- Quadratic Drag -->
        <xUabsU>-6.2282</xUabsU>
        <yVabsV>-601.27</yVabsV>
        <zWabsW>-601.27</zWabsW>
        <kPabsP>-0.1916</kPabsP>
        <mQabsQ>-632.698957</mQabsQ>
        <nRabsR>-632.698957</nRabsR>
    </plugin>

    <!-- Publishes perfect odometry data for testing controllers -->
    <plugin
      filename="gz-sim-odometry-publisher-system"
      name="gz::sim::systems::OdometryPublisher">
      <dimensions>3</dimensions>
    </plugin>
  </gazebo>

</robot>